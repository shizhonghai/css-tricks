(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{658:function(t,a,v){"use strict";v.r(a);var _=v(69),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"浏览器缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),v("h2",{attrs:{id:"浏览器缓存的作用是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存的作用是什么"}},[t._v("#")]),t._v(" 浏览器缓存的作用是什么？")]),t._v(" "),v("ol",[v("li",[t._v("缓存可以减少冗余的数据传输。节省了网络宽带，从而可以更快的加载页面。")]),t._v(" "),v("li",[t._v("缓存降低了服务器的要求，从而服务器更快的响应。")])]),t._v(" "),v("h2",{attrs:{id:"浏览器缓存过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存过程"}},[t._v("#")]),t._v(" 浏览器缓存过程")]),t._v(" "),v("p",[t._v("浏览器与服务器是通过 "),v("code",[t._v("http")]),t._v(" 请求来进行通信的，也就是说，浏览器发起 "),v("code",[t._v("http")]),t._v(" 请求，服务器响应这个请求并返回结果，当浏览器\n第一次向服务器发起 "),v("code",[t._v("http")]),t._v(" 请求后得到结果，那么会根据响应头信息中的缓存标识来决定是否缓存结果，如果是，那么就将请求结果和缓存标识保存在浏览器缓存中。")]),t._v(" "),v("h2",{attrs:{id:"强缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),v("ol",[v("li",[t._v("强缓存：如果资源没过期，就读取缓存，如果过期了，则请求服务器。")]),t._v(" "),v("li",[t._v("判断该资源是否命中强缓存，就看 response 中 Cache-Control 的值，如果有max-age=xxx秒，则命中强缓存。\n如果Cache-Control的值是no-cache，说明没命中强缓存，走协商缓存。")])]),t._v(" "),v("p",[v("strong",[t._v("强缓存步骤：")])]),t._v(" "),v("ol",[v("li",[t._v("第一次请求 a.js ，缓存表中没该信息，直接请求后端服务器。")]),t._v(" "),v("li",[t._v("后端服务器返回了 a.js ，且 http response header 中 cache-control 为 max-age=xxxx，所以是强缓存规则，存入缓存表中。")]),t._v(" "),v("li",[t._v("第二次请求 a.js ，缓存表中是 max-age， 那么命中强缓存，然后判断是否过期，如果没过期，直接读缓存的a.js，如果过期了，则执行协商缓存的步骤了。")])]),t._v(" "),v("h2",{attrs:{id:"协商缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),v("p",[t._v("协商缓存会在强制缓存失效后，浏览器携带缓存标识向服务器发起http请求，服务器会根据缓存标识来决定是否使用缓存的过程。")]),t._v(" "),v("p",[v("strong",[t._v("协商缓存步骤")])]),t._v(" "),v("ol",[v("li",[t._v("请求资源时，把用户本地该资源的 ETag 同时带到服务端，服务端和最新资源做对比。")]),t._v(" "),v("li",[t._v("如果资源没更改，返回304，浏览器读取本地缓存。")]),t._v(" "),v("li",[t._v("如果资源有更改，返回200，返回最新的资源。")])]),t._v(" "),v("h2",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("强缓存的优先级高于协商缓存，如果强缓存生效，那么就直接使用浏览器缓存，如果不生效，那么就使用协商缓存，\n协商缓存由服务器决定是否使用浏览器的缓存，如果协商缓存生效，那么就直接返回304，并使用浏览器缓存，\n如果协商不生效，那么就返回200，并重新获取请求结果，再保存到浏览器缓存中。")])])}),[],!1,null,null,null);a.default=s.exports}}]);